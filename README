tomld (tomoyo learning daemon) 0.36
Copyright (C) 2011 Andras Horvath
E-mail: mail@log69.com - suggestions & feedbacks are welcome
URL: http://log69.com - the official site

LICENSE:
This program is free software; you can redistribute it and/or modify it under 
the terms of the GNU General Public License as published by the Free Software 
Foundation; either version 3 of the License, or (at your option) any later 
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with 
this program.  If not, see <http://www.gnu.org/licenses/>.

DESCRIPTION:
tomld (tomoyo learning daemon) is an extension to the Tomoyo security module to 
ease and automate the setup process of a MAC (Mandatory Access Control) aware 
system to increase security by closing applications and services into a domain 
with their rules. It helps the user harden his system easily. Starts domains in 
learning mode, collects rules, then later changes these rules and enforces the 
policy.

Tomoyo module contains already the learning ability to automatically setup 
rules while the processes are running in learning mode. Only, there are 
continously changing files and directory names that the processes use, so those 
have to be replaced with wildcarded rules. This needs a rather advanced 
knowledge of the system.

This tool tries to fully automate the MAC setup, hoping the average users would 
be able to use a much more secure system on their own with minimal efforts.

Tomoyo security module is part of the mainline Linux kernel since version 
2.6.30. Currently this solution targets Linux systems only.

*TOMOYO(r) is a registered trademark of NTT DATA Corporation

LINKS:
http://tomoyo.sourceforge.jp
http://tomoyo.sourceforge.jp/documentation.html.en
http://tomoyo.sourceforge.jp/2.2/index.html.en
http://en.wikipedia.org/wiki/Mandatory_access_control

USAGE: tomld [options] [executables]

The following options are supported:
    -h   --help             print this help
    -v   --version          print version information
    -c   --color            colorized output
         --clear            clear domain configurations
         --reset            reinitialize domain configurations
                            (all previously learnt rules will be backed up)
    -i   --info   [pattern] print domains' rules by pattern
                            (without pattern, print a list of main domains)
    -l   --learn            turn learning mode back for all domains
                            (this is not advised, only for correction purposes)
    -r   --remove [pattern] remove domains by pattern
         --yes              auto confirm with yes
    -k   --keep             don't change domain's mode for this run
                            (learning mode domains will stay so on exit)
    -R   --recursive [dirs] replace subdirs of dirs in rules with wildcards
    -1   --once             quit after first cycle
                            (might be useful for scripts)

*executables are additonal programs to create domains for

requirements: Tomoyo enabled kernel (v2.6.30 and above) and tomoyo-tools (v2.2 
and above)

REMARKS:
- user space tool for Tomoyo developed in C
- the program assumes to be run in a fully trusted environment
- it is advised to start with new rules instead of keeping any manually created 
ones
- processes in the domains should run in learning mode for quite some time to 
collect all the necessary rules to avoid malfunctioning by access deny later
- before reboot, the rules should be stored manually by running 
"tomoyo-savepolicy" or "tomld -k -1" as root if there are still domains in 
learning mode, because Tomoyo forgets the learned rules on system restart
- enforcing mode should never be switched back off for security reason
- exception domains means programs with no rules at all
- programs should be used in a maximum possible way during the learning phase 
to force a rule for all kinds of behave
- on --reset switch the config files will be backed up and the former log 
entries still won't be considered, so it really means a new start
- the program can be stopped any time by pressing q whereafter all old domains 
(learning and permissive) are turned into enforcing mode
- tomld files: /var/local/tomld.logmark (this contains a mark to identify the 
end of the recently read message logs), /var/run/tomld.pid (pid file to avoid 
multpiple instances of the program to be running at the same time)
- in case a software or its settings change with a new version, the rules can 
be regenerated easily
- the running processes need to be restarted on newly created domains

HOW TO USE:
- download, move it to a directory that root owns only (for security), change 
its owner to root, change writeable only by root, make it executable, and run 
it as root
- run it the 1st time, now it will offer to install all missing packages and 
setup grub with kernel parameter
- system reboot is necessary now
- run it the 2nd time, now it will create domains for the processes 
automatically with learning mode
- stop it now, cause the domains will stay in learning mode and the tomoyo 
module will collect all rules
- reboot the system or at least all the services and applications that have 
domains now
- hours or days later let's run it the 3rd time, now the access denied logs 
will be converted to rules, and on exit all remaining domains will be turned 
into enforcing mode

